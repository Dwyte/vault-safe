{"version":3,"sources":["components/common/button.jsx","components/todoItem.jsx","components/todoForm.jsx","components/common/link.jsx","components/common/navbar.jsx","services/httpServices.js","services/vaultServices.js","components/vault.jsx","components/common/userForm.jsx","components/login.jsx","components/register.jsx","components/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Button","_ref","className","onClick","fa","react_default","a","createElement","Fragment","TodoItem","todo","favoriteTodo","flipDoneTodo","removeTodo","textStyle","textDecoration","completed","_id","title","favorite","style","common_button","TodoForm","addTodo","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onSubmit","e","preventDefault","type","placeholder","maxLength","onChange","target","autoFocus","Link","href","label","NavBar","filters","filterIndex","isAsc","setFilter","setSort","map","filter","key","indexOf","httpServices","get","axios","put","post","delete","endpoint","postVault","asyncToGenerator","regenerator_default","mark","_callee","vault","wrap","_context","prev","next","http","abrupt","sent","stop","_x","apply","this","arguments","validateUserHash","_ref2","_callee2","userHash","_context2","concat","_x2","getVault","_ref3","_callee3","auth","_context3","_x3","updateVault","_ref4","_callee4","data","token","config","_context4","localStorage","getItem","headers","x-auth-token","_x4","deleteVault","_ref5","_callee5","_context5","AES","CryptoJS","Vault","props","todos","setTodos","_useState3","_useState4","filterMethod","_useState5","_useState6","sort","useEffect","_getVaultData","getVaultData","vaultKey","JSON","parse","decrypt","toString","enc","Utf8","saveVault","_getVaultData2","encrypt","stringify","setItem","t0","alert","newTodos","toConsumableArray","find","t","splice","exitVault","clear","deleteVaultFromDb","window","location","filtered","_","sorted","orderBy","navbar","index","todoItem","todoForm","nanoid","common_link","UserForm","submitUserForm","userName","setUserName","password","setPassword","submitLabel","minLength","SHA256","SHA256Iteration","iteration","i","Login","_ref2$data","replace","userForm","Register","history","push","Footer","App","Boolean","react_router","path","component","from","to","form","exact","footer","hostname","match","ReactDOM","render","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d89a46aa.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Button = ({ className, onClick, fa }) => {\n  return (\n    <React.Fragment>\n      <button className={className} onClick={onClick}>\n        <i className={fa} />\n      </button>{\" \"}\n    </React.Fragment>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"./common/button\";\n\nconst TodoItem = ({ todo, favoriteTodo, flipDoneTodo, removeTodo }) => {\n  const textStyle = {\n    textDecoration: todo.completed ? \"line-through\" : \"none\"\n  };\n\n  const { _id, title, completed, favorite } = todo;\n\n  return (\n    <div className=\"todo mb\">\n      <span style={textStyle}>{title}</span>\n      <div>\n        <Button\n          fa={completed ? \"fas fa-undo-alt\" : \"fas fa-check-square\"}\n          onClick={() => flipDoneTodo(_id)}\n        />\n        <Button\n          fa={favorite ? \"fas fa-star\" : \"far fa-star\"}\n          onClick={() => favoriteTodo(_id)}\n        />\n        <Button fa=\"fas fa-trash\" onClick={() => removeTodo(_id)} />\n      </div>\n    </div>\n  );\n};\n\nexport default TodoItem;\n","import React, { useState } from \"react\";\n\nconst TodoForm = ({ addTodo }) => {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Enter anything, todos, notes, secrets, anything! (max 45)\"\n        maxLength=\"45\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        autoFocus\n      />\n    </form>\n  );\n};\n\nexport default TodoForm;\n","import React from \"react\";\n\nconst Link = ({className, onClick, href, label}) => {\n  return (\n    <a className={className} onClick={onClick} href={href}>\n      <small>{label}</small>\n    </a>\n  );\n};\n\nexport default Link;\n","import React from \"react\";\nimport Button from \"./button\";\n\nconst NavBar = ({ filters, filterIndex, isAsc, setFilter, setSort }) => {\n  return (\n    <div className=\"nav\">\n      {filters.map(filter => (\n        <Button\n          key={filters.indexOf(filter)}\n          className={filters[filterIndex] === filter ? \"active\" : \"\"}\n          onClick={() => setFilter(filters.indexOf(filter))}\n          fa={filter.fa}\n        />\n      ))}\n      <Button\n        className=\"active\"\n        onClick={() => setSort(isAsc ? \"desc\" : \"asc\")}\n        fa={isAsc ? \"fas fa-sort-alpha-down\" : \"fas fa-sort-alpha-up\"}\n      />\n    </div>\n  );\n};\n\nexport default NavBar;\n","import axios from 'axios';\n\nexport default {\n    get: axios.get,\n    put: axios.put,\n    post: axios.post,\n    delete: axios.delete\n}","import http from \"./httpServices\";\nimport config from \"../config.json\";\n\nconst env = process.env.NODE_ENV || \"development\";\n\nconst endpoint = config[\"apiEndpoint-\" + env];\n\nexport const postVault = async vault => {\n  return await http.post(endpoint, vault);\n};\n\nexport const validateUserHash = async userHash => {\n  return await http.get(`${endpoint}/${userHash}`);\n};\n\nexport const getVault = async auth => {\n  return await http.get(`${endpoint}/get/${auth}`);\n};\n\nexport const updateVault = async data => {\n  const token = localStorage.getItem(\"token\");\n  const config = {\n    headers: {\n      \"x-auth-token\": token\n    }\n  };\n\n  return await http.put(endpoint, data, config);\n};\n\nexport const deleteVault = async () => {\n  const token = localStorage.getItem(\"token\");\n  const config = {\n    headers: {\n      \"x-auth-token\": token\n    }\n  };\n\n  return await http.delete(endpoint, config);\n};\n","import React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport CryptoJS from \"crypto-js\";\nimport nanoid from \"nanoid\";\nimport TodoItem from \"./todoItem\";\nimport TodoForm from \"./todoForm\";\nimport Link from \"./common/link\";\nimport NavBar from \"./common/navbar\";\nimport { updateVault, deleteVault } from \"../services/vaultServices\";\n\nconst { AES } = CryptoJS;\n\nconst Vault = props => {\n  const [todos, setTodos] = useState([]);\n  const [filterIndex, setFilter] = useState(0);\n  const filters = [\n    { fa: \"fas fa-globe-americas\", filterMethod: null },\n    {\n      fa: \"fas fa-star\",\n      filterMethod: ({ favorite }) => {\n        return favorite;\n      }\n    },\n    {\n      fa: \"fa fa-th-list\",\n      filterMethod: ({ completed }) => {\n        return !completed;\n      }\n    },\n    {\n      fa: \"fas fa-check-square\",\n      filterMethod: ({ completed }) => {\n        return completed;\n      }\n    }\n  ];\n  const [sort, setSort] = useState(\"asc\");\n\n  useEffect(() => {\n    const { vault, vaultKey } = getVaultData();\n\n    // Decrypt & Parse\n    const todos = JSON.parse(\n      AES.decrypt(vault, vaultKey).toString(CryptoJS.enc.Utf8)\n    );\n\n    setTodos(todos);\n  }, []);\n\n  const saveVault = async todos => {\n    let { auth, vault, vaultKey } = getVaultData();\n\n    vault = AES.encrypt(JSON.stringify(todos), vaultKey).toString();\n\n    try {\n      await updateVault({ auth, vault });\n      localStorage.setItem(\n        \"currentVault\",\n        JSON.stringify({ auth, vault, vaultKey })\n      );\n    } catch (ex) {\n      alert(ex);\n    }\n  };\n\n  const getVaultData = () => {\n    return JSON.parse(localStorage.getItem(\"currentVault\"));\n  };\n\n  const addTodo = title => {\n    const todo = {\n      _id: nanoid(8),\n      title,\n      completed: false\n    };\n    const newTodos = [...todos, todo];\n    setTodos(newTodos);\n\n    saveVault(newTodos);\n  };\n\n  const flipDoneTodo = _id => {\n    const newTodos = [...todos];\n    let todo = newTodos.find(t => t._id === _id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n\n    saveVault(newTodos);\n  };\n\n  const favoriteTodo = _id => {\n    const newTodos = [...todos];\n    let todo = newTodos.find(t => t._id === _id);\n    todo.favorite = !todo.favorite;\n    setTodos(newTodos);\n\n    saveVault(newTodos);\n  };\n\n  const removeTodo = _id => {\n    const newTodos = [...todos];\n    const todo = newTodos.find(t => t._id === _id);\n    newTodos.splice(newTodos.indexOf(todo), 1);\n    setTodos(newTodos);\n\n    saveVault(newTodos);\n  };\n\n  const exitVault = () => {\n    localStorage.clear();\n  };\n\n  const deleteVaultFromDb = async e => {\n    e.preventDefault();\n\n    try {\n      await deleteVault();\n      exitVault();\n      alert(\"Vault succesfuly deleted from the database.\");\n      window.location = \"/\";\n    } catch (ex) {\n      alert(ex);\n    }\n  };\n\n  const filtered = _.filter(todos, filters[filterIndex].filterMethod);\n\n  const sorted = _.orderBy(filtered, [\"title\"], [sort]);\n\n  const isAsc = sort === \"asc\";\n\n  return (\n    <React.Fragment>\n      <NavBar\n        filters={filters}\n        filterIndex={filterIndex}\n        isAsc={isAsc}\n        setFilter={setFilter}\n        setSort={setSort}\n      />\n\n      {sorted.map((todo, index) => (\n        <TodoItem\n          key={index}\n          todo={todo}\n          flipDoneTodo={flipDoneTodo}\n          favoriteTodo={favoriteTodo}\n          removeTodo={removeTodo}\n        />\n      ))}\n      <TodoForm addTodo={addTodo} />\n\n      <Link\n        className=\"float-right\"\n        onClick={deleteVaultFromDb}\n        href=\"/login\"\n        label=\"Delete Vault\"\n      />\n      <Link onClick={exitVault} href=\"/login\" label=\"Exit Vault\" />\n    </React.Fragment>\n  );\n};\n\nexport default Vault;\n","import React from \"react\";\n\nconst UserForm = ({\n  submitUserForm,\n  userName,\n  setUserName,\n  password,\n  setPassword,\n  submitLabel\n}) => {\n  return (\n    <React.Fragment>\n      <form onSubmit={submitUserForm}>\n        <input\n          type=\"text\"\n          className=\"input mb\"\n          placeholder=\"Username\"\n          value={userName}\n          minLength=\"4\"\n          onChange={e => setUserName(e.target.value)}\n          autoFocus\n        />\n        <input\n          type=\"password\"\n          className=\"input mb\"\n          placeholder=\"Password\"\n          minLength=\"4\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n\n        <input className=\"submit\" type=\"submit\" value={submitLabel} />\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default UserForm;\n","import React, { useState } from \"react\";\nimport { getVault } from \"../services/vaultServices\";\nimport CryptoJS from \"crypto-js\";\nimport Link from \"./common/link\";\nimport UserForm from \"./common/userForm\";\nconst { SHA256 } = CryptoJS;\n\nconst SHA256Iteration = (data, iteration) => {\n  for (let i = 0; i < iteration; i++) {\n    data = SHA256(data);\n  }\n\n  return data;\n};\n\nconst hashIteration = 100000;\n\nconst Login = props => {\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const submitUserForm = async e => {\n    e.preventDefault();\n\n    const vaultKey = SHA256Iteration(\n      userName + password,\n      hashIteration\n    ).toString();\n    const auth = SHA256Iteration(vaultKey + password, hashIteration).toString();\n\n    try {\n      const {\n        data: { token, vault }\n      } = await getVault(auth);\n\n      saveVault({ auth, vaultKey, vault });\n      localStorage.setItem(\"token\", token);\n\n      window.location.replace(\"/vault\");\n    } catch (ex) {\n      alert(\"Vault not found\");\n    }\n  };\n\n  const saveVault = vault => {\n    vault = JSON.stringify(vault);\n\n    localStorage.setItem(\"currentVault\", vault);\n  };\n\n  return (\n    <React.Fragment>\n      <UserForm\n        submitUserForm={submitUserForm}\n        userName={userName}\n        setUserName={setUserName}\n        password={password}\n        setPassword={setPassword}\n        submitLabel=\"Open Vault\"\n      />\n      <Link href=\"/register\" label=\"Don't have a vault yet?\" />\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport CryptoJS from \"crypto-js\";\nimport nanoid from \"nanoid\";\nimport { postVault, validateUserHash } from \"../services/vaultServices\";\nimport Link from \"./common/link\";\nimport UserForm from \"./common/userForm\";\nconst { SHA256, AES } = CryptoJS;\n\nconst SHA256Iteration = (data, iteration) => {\n  for (let i = 0; i < iteration; i++) {\n    data = SHA256(data);\n  }\n\n  return data;\n};\n\nconst hashIteration = 100000;\n\nconst Register = props => {\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const submitUserForm = async e => {\n    e.preventDefault();\n\n    const userHash = SHA256Iteration(userName, hashIteration).toString();\n    const { data: alreadyExists } = await validateUserHash(userHash);\n    if (alreadyExists) return alert(\"Vault with username already exists.\");\n\n    const vaultKey = SHA256Iteration(userName + password, hashIteration).toString();\n    const auth = SHA256Iteration(vaultKey + password, hashIteration).toString();\n    const vault = AES.encrypt(\n      JSON.stringify([\n        { _id: nanoid(8), title: \"Welcome to VaultSafe\" },\n        { _id: nanoid(8), title: \"Your secrets are safe on the cloud!\" }\n      ]),\n      vaultKey\n    ).toString();\n\n    const data = {\n      userHash,\n      auth,\n      vault\n    };\n\n    try {\n      await postVault(data);\n      alert(\"Vault created\");\n      props.history.push(\"/login\");\n    } catch (ex) {\n      alert(ex);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <UserForm\n        submitUserForm={submitUserForm}\n        userName={userName}\n        setUserName={setUserName}\n        password={password}\n        setPassword={setPassword}\n        submitLabel=\"Create Vault\"\n      />\n      <Link href=\"/login\" label=\"Already have a vault?\" />\n    </React.Fragment>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"container\">\n      <small>VaultSafe | <a href=\"https://github.com/Dwyte/vaultSafe\">About</a></small>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport \"./App.css\";\nimport Vault from \"./components/vault\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Login from \"./components/login\";\nimport Register from \"./components/register\";\nimport Footer from \"./components/footer\";\n\nconst App = () => {\n  const checkCurrVault = () => {\n    return Boolean(localStorage.getItem(\"currentVault\"));\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        {checkCurrVault() ? (\n          <Switch>\n            <Route path=\"/vault\" component={Vault} />\n            <Redirect from=\"/\" to=\"/vault\" />\n          </Switch>\n        ) : (\n          <Switch>\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <Redirect form=\"/vault\" exact to=\"/login\" />\n          </Switch>\n        )}\n      </div>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport '@fortawesome/fontawesome-free/css/all.css'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}