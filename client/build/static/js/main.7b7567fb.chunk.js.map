{"version":3,"sources":["components/todoItem.jsx","components/todoForm.jsx","services/httpServices.js","services/vaultServices.js","components/common/link.jsx","components/common/navBtn.jsx","components/common/navbar.jsx","components/todo.jsx","components/login.jsx","components/register.jsx","components/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["TodoItem","_ref","todo","favoriteTodo","flipDoneTodo","removeTodo","textStyle","textDecoration","completed","_id","title","favorite","react_default","a","createElement","className","style","onClick","TodoForm","addTodo","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onSubmit","e","preventDefault","type","placeholder","maxLength","autoFocus","onChange","target","httpServices","get","axios","put","post","delete","endpoint","postVault","asyncToGenerator","regenerator_default","mark","_callee","vault","wrap","_context","prev","next","http","abrupt","sent","stop","_x","apply","this","arguments","validateUserHash","_ref2","_callee2","userHash","_context2","concat","_x2","getVault","_ref3","_callee3","auth","_context3","_x3","updateVault","_ref4","_callee4","data","token","config","_context4","localStorage","getItem","headers","x-auth-token","_x4","deleteVault","_ref5","_callee5","_context5","Link","href","label","NavBtn","fa","Fragment","NavBar","filters","filterIndex","isAsc","setFilter","setSort","map","filter","navBtn","key","indexOf","AES","CryptoJS","Todo","props","todos","setTodos","_useState3","_useState4","filterMethod","_useState5","_useState6","sort","useEffect","_getVaultData","getVaultData","vaultKey","JSON","parse","decrypt","toString","enc","Utf8","saveVault","_getVaultData2","encrypt","stringify","setItem","t0","alert","newTodos","toConsumableArray","find","t","splice","exitVault","clear","deleteVaultFromDb","window","location","filtered","_","sorted","orderBy","navbar","index","todoItem","todoForm","nanoid","common_link","SHA256","Login","userName","setUserName","password","setPassword","handleSubmit","_ref2$data","replace","Register","history","push","Footer","App","Boolean","react_router","path","component","from","to","form","exact","footer","hostname","match","ReactDOM","render","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b7567fb.chunk.js","sourcesContent":["import React from \"react\";\n\nconst TodoItem = ({ todo, favoriteTodo, flipDoneTodo, removeTodo }) => {\n  const textStyle = {\n    textDecoration: todo.completed ? \"line-through\" : \"none\"\n  };\n\n  const {_id, title, completed, favorite} = todo;\n\n  return (\n    <div className=\"todo mb\">\n      <span style={textStyle}>{title}</span>\n      <div>\n        <button onClick={() => flipDoneTodo(_id)}>\n          <i className={completed ? \"fas fa-undo-alt\" : \"fas fa-check-square\"} />\n        </button>\n        {\" \"}\n        <button onClick={() => favoriteTodo(_id)}>\n          <i className={favorite ? \"fas fa-star\" : \"far fa-star\"} />\n        </button>\n        {\" \"}\n        <button onClick={() => removeTodo(_id)}>\n          <i className=\"fas fa-trash\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoItem;\n","import React, { useState } from \"react\";\n\nconst TodoForm = ({ addTodo }) => {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Enter anything, todos, notes, secrets, anything! (max 45)\"\n        maxLength=\"45\"\n        autoFocus\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n    </form>\n  );\n};\n\nexport default TodoForm;\n","import axios from 'axios';\n\nexport default {\n    get: axios.get,\n    put: axios.put,\n    post: axios.post,\n    delete: axios.delete\n}","import http from \"./httpServices\";\nimport config from \"../config.json\";\n\nconst env = process.env.NODE_ENV || \"development\";\n\nconst endpoint = config[\"apiEndpoint-\" + env];\n\nexport const postVault = async vault => {\n  return await http.post(endpoint, vault);\n};\n\nexport const validateUserHash = async userHash => {\n  return await http.get(`${endpoint}/${userHash}`);\n};\n\nexport const getVault = async auth => {\n  return await http.get(`${endpoint}/get/${auth}`);\n};\n\nexport const updateVault = async data => {\n  const token = localStorage.getItem(\"token\");\n  const config = {\n    headers: {\n      \"x-auth-token\": token\n    }\n  };\n\n  return await http.put(endpoint, data, config);\n};\n\nexport const deleteVault = async () => {\n  const token = localStorage.getItem(\"token\");\n  const config = {\n    headers: {\n      \"x-auth-token\": token\n    }\n  };\n\n  return await http.delete(endpoint, config);\n};\n","import React from \"react\";\n\nconst Link = ({className, onClick, href, label}) => {\n  return (\n    <a className={className} onClick={onClick} href={href}>\n      <small>{label}</small>\n    </a>\n  );\n};\n\nexport default Link;\n","import React from \"react\";\n\nconst NavBtn = ({ className, onClick, fa }) => {\n  return (\n    <React.Fragment>\n      <button className={className} onClick={onClick}>\n        <i className={fa} />\n      </button>{\" \"}\n    </React.Fragment>\n  );\n};\n\nexport default NavBtn;\n","import React from \"react\";\nimport NavBtn from \"./navBtn\";\n\nconst NavBar = ({ filters, filterIndex, isAsc, setFilter, setSort }) => {\n  return (\n    <div className=\"nav\">\n      {filters.map(filter => (\n        <NavBtn\n          key={filters.indexOf(filter)}\n          className={filters[filterIndex] === filter ? \"active\" : \"\"}\n          onClick={() => setFilter(filters.indexOf(filter))}\n          fa={filter.fa}\n        />\n      ))}\n      <NavBtn\n        className=\"active\"\n        onClick={() => setSort(isAsc ? \"desc\" : \"asc\")}\n        fa={isAsc ? \"fas fa-sort-alpha-down\" : \"fas fa-sort-alpha-up\"}\n      />\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { useState, useEffect } from \"react\";\nimport TodoItem from \"./todoItem\";\nimport TodoForm from \"./todoForm\";\nimport CryptoJS from \"crypto-js\";\nimport nanoid from \"nanoid\";\nimport { updateVault, deleteVault } from \"../services/vaultServices\";\nimport Link from \"./common/link\";\nimport _ from \"lodash\";\nimport NavBar from \"./common/navbar\";\nconst { AES } = CryptoJS;\n\nconst Todo = props => {\n  const [todos, setTodos] = useState([]);\n  const [filterIndex, setFilter] = useState(0);\n  const filters = [\n    { fa: \"fas fa-globe-americas\", filterMethod: null },\n    {\n      fa: \"fas fa-star\",\n      filterMethod: ({ favorite }) => {\n        return favorite;\n      }\n    },\n    {\n      fa: \"fa fa-th-list\",\n      filterMethod: ({ completed }) => {\n        return !completed;\n      }\n    },\n    {\n      fa: \"fas fa-check-square\",\n      filterMethod: ({ completed }) => {\n        return completed;\n      }\n    }\n  ];\n  const [sort, setSort] = useState(\"asc\");\n\n  useEffect(() => {\n    const { vault, vaultKey } = getVaultData();\n\n    // Decrypt & Parse\n    const todos = JSON.parse(\n      AES.decrypt(vault, vaultKey).toString(CryptoJS.enc.Utf8)\n    );\n\n    setTodos(todos);\n  }, []);\n\n  const saveVault = async todos => {\n    let { auth, vault, vaultKey } = getVaultData();\n\n    vault = AES.encrypt(JSON.stringify(todos), vaultKey).toString();\n\n    try {\n      await updateVault({ auth, vault });\n      localStorage.setItem(\n        \"currentVault\",\n        JSON.stringify({ auth, vault, vaultKey })\n      );\n    } catch (ex) {\n      alert(ex);\n    }\n  };\n\n  const getVaultData = () => {\n    return JSON.parse(localStorage.getItem(\"currentVault\"));\n  };\n\n  const addTodo = title => {\n    const todo = {\n      _id: nanoid(8),\n      title,\n      completed: false\n    };\n    const newTodos = [...todos, todo];\n    setTodos(newTodos);\n\n    saveVault(newTodos);\n  };\n\n  const flipDoneTodo = _id => {\n    const newTodos = [...todos];\n    let todo = newTodos.find(t => t._id === _id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n\n    saveVault(newTodos);\n  };\n\n  const favoriteTodo = _id => {\n    const newTodos = [...todos];\n    let todo = newTodos.find(t => t._id === _id);\n    todo.favorite = !todo.favorite;\n    setTodos(newTodos);\n\n    saveVault(newTodos);\n  };\n\n  const removeTodo = _id => {\n    const newTodos = [...todos];\n    const todo = newTodos.find(t => t._id === _id);\n    newTodos.splice(newTodos.indexOf(todo), 1);\n    setTodos(newTodos);\n\n    saveVault(newTodos);\n  };\n\n  const exitVault = () => {\n    localStorage.clear();\n  };\n\n  const deleteVaultFromDb = async e => {\n    e.preventDefault();\n\n    try {\n      await deleteVault();\n      exitVault();\n      alert(\"Vault succesfuly deleted from the database.\");\n      window.location = \"/\";\n    } catch (ex) {\n      alert(ex);\n    }\n  };\n\n  const filtered = _.filter(todos, filters[filterIndex].filterMethod);\n\n  const sorted = _.orderBy(filtered, [\"title\"], [sort]);\n\n  const isAsc = sort === \"asc\";\n\n  return (\n    <React.Fragment>\n      <NavBar\n        filters={filters}\n        filterIndex={filterIndex}\n        isAsc={isAsc}\n        setFilter={setFilter}\n        setSort={setSort}\n      />\n\n      {sorted.map((todo, index) => (\n        <TodoItem\n          key={index}\n          todo={todo}\n          flipDoneTodo={flipDoneTodo}\n          favoriteTodo={favoriteTodo}\n          removeTodo={removeTodo}\n        />\n      ))}\n      <TodoForm addTodo={addTodo} />\n\n      <Link\n        className=\"float-right\"\n        onClick={deleteVaultFromDb}\n        href=\"/login\"\n        label=\"Delete Vault\"\n      />\n      <Link onClick={exitVault} href=\"/login\" label=\"Exit Vault\" />\n    </React.Fragment>\n  );\n};\n\nexport default Todo;\n","import React, { useState } from \"react\";\nimport { getVault } from \"../services/vaultServices\";\nimport CryptoJS from \"crypto-js\";\nimport Link from \"./common/link\";\nconst { SHA256 } = CryptoJS;\n\nconst Login = props => {\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const vaultKey = SHA256(userName + password).toString();\n    const auth = SHA256(vaultKey + password).toString();\n\n    try {\n      const { data: {token, vault} } = await getVault(auth);\n\n      saveVault({ auth, vaultKey, vault });\n      localStorage.setItem('token', token);\n\n      window.location.replace(\"/vault\");\n    } catch (ex) {\n      alert(\"Vault not found\");\n    }\n  };\n\n  const saveVault = vault => {\n    vault = JSON.stringify(vault);\n\n    localStorage.setItem(\"currentVault\", vault);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input mb\"\n        placeholder=\"Username\"\n        value={userName}\n        onChange={e => setUserName(e.target.value)}\n        autoFocus\n      />\n\n      <input\n        type=\"password\"\n        className=\"input mb\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n      />\n\n      <input className=\"submit\" type=\"submit\" value=\"Open Vault\" />\n\n      <Link href=\"/register\" label=\"Don't have a vault yet?\" />\n    </form>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport CryptoJS from \"crypto-js\";\nimport nanoid from \"nanoid\";\nimport { postVault, validateUserHash } from \"../services/vaultServices\";\nimport Link from \"./common/link\";\nconst { SHA256, AES } = CryptoJS;\n\nconst Register = props => {\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const userHash = SHA256(userName).toString();\n    const { data: alreadyExists } = await validateUserHash(userHash);\n    if (alreadyExists) return alert(\"Vault with username already exists.\");\n\n    const vaultKey = SHA256(userName + password).toString();\n    const auth = SHA256(vaultKey + password).toString();\n    const vault = AES.encrypt(\n      JSON.stringify([\n        { _id: nanoid(8), title: \"Welcome to VaultSafe\" },\n        { _id: nanoid(8), title: \"Your secrets are safe on the cloud!\" }\n      ]),\n      vaultKey\n    ).toString();\n\n    const data = {\n      userHash,\n      auth,\n      vault\n    };\n\n    try {\n      await postVault(data);\n      alert(\"Vault created\");\n      props.history.push(\"/login\");\n    } catch (ex) {\n      alert(ex);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input mb\"\n        placeholder=\"Username\"\n        value={userName}\n        onChange={e => setUserName(e.target.value)}\n        autoFocus\n      />\n\n      <input\n        type=\"password\"\n        className=\"input mb\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n      />\n\n      <input className=\"submit\" type=\"submit\" value=\"Create Vault\" />\n      <Link href=\"/login\" label=\"Already have a vault?\" />\n    </form>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"container\">\n      <small>VaultSafe | <a href=\"https://github.com/Dwyte/vaultSafe\">About</a></small>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport \"./App.css\";\nimport Todo from \"./components/todo.jsx\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Login from \"./components/login\";\nimport Register from \"./components/register\";\nimport Footer from \"./components/footer\";\n\nconst App = () => {\n  const checkCurrVault = () => {\n    return Boolean(localStorage.getItem(\"currentVault\"));\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        {checkCurrVault() ? (\n          <Switch>\n            <Route path=\"/vault\" component={Todo} />\n            <Redirect from=\"/\" to=\"/vault\" />\n          </Switch>\n        ) : (\n          <Switch>\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <Redirect form=\"/vault\" exact to=\"/login\" />\n          </Switch>\n        )}\n      </div>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport '@fortawesome/fontawesome-free/css/all.css'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}